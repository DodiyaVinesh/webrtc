{"version":3,"sources":["./src/environments/environment.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/signaling.service.ts","./src/app/call.service.ts","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false\r\n};\r\n\r\n/*\r\n * For easier debugging in development mode, you can import the following file\r\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\r\n *\r\n * This import should be commented out in production mode because it will have a negative impact\r\n * on performance if an error is thrown.\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","import { Component, ElementRef, OnInit, ViewChild } from '@angular/core';\r\nimport { CallService } from './call.service';\r\nimport { SignalingService } from './signaling.service';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styles: [],\r\n})\r\nexport class AppComponent implements OnInit {\r\n  @ViewChild('remoteVideo') remoteVideo: ElementRef;\r\n\r\n  constructor(\r\n    private callService: CallService,\r\n    private signalingService: SignalingService\r\n  ) {}\r\n\r\n  ngOnInit(): void {\r\n    this.signalingService\r\n      .getMessages()\r\n      .subscribe((payload) => this._handleMessage(payload));\r\n  }\r\n\r\n  public async makeCall(): Promise<void> {\r\n    await this.callService.makeCall(this.remoteVideo);\r\n  }\r\n\r\n  private async _handleMessage(data): Promise<void> {\r\n    switch (data.type) {\r\n      case 'offer':\r\n        await this.callService.handleOffer(data.offer, this.remoteVideo);\r\n        break;\r\n\r\n      case 'answer':\r\n        await this.callService.handleAnswer(data.answer);\r\n        break;\r\n\r\n      case 'candidate':\r\n        this.callService.handleCandidate(data.candidate);\r\n        break;\r\n\r\n      default:\r\n        break;\r\n    }\r\n  }\r\n}\r\n","<div class=\"d-flex flex-column justify-content-center align-items-center h-100\">\r\n  <div class=\"d-flex flex-column mb-3\">\r\n    <video #remoteVideo controls autoplay></video>\r\n    <button class=\"btn btn-primary m-3\" (click)=\"makeCall()\">Init call</button>\r\n  </div>\r\n  <br>\r\n</div>","import { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\n\r\nimport { AppComponent } from './app.component';\r\nimport { SocketIoModule } from 'ngx-socket-io';\r\n\r\n@NgModule({\r\n  declarations: [AppComponent],\r\n  imports: [\r\n    BrowserModule,\r\n    SocketIoModule.forRoot({ url: 'https://vinesh-call-app.glitch.me/' }),\r\n  ],\r\n  providers: [],\r\n  bootstrap: [AppComponent],\r\n})\r\nexport class AppModule {}\r\n","import { Injectable } from '@angular/core';\r\nimport { Socket } from 'ngx-socket-io';\r\nimport { Observable } from 'rxjs';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class SignalingService {\r\n  constructor(private socket: Socket) {}\r\n\r\n  getMessages(): Observable<any> {\r\n    return this.socket.fromEvent('message');\r\n  }\r\n\r\n  sendMessage(payload): void {\r\n    this.socket.emit('send-message', payload);\r\n  }\r\n}\r\n","import { ElementRef, Injectable } from '@angular/core';\r\nimport { SignalingService } from './signaling.service';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class CallService {\r\n  configuration: RTCConfiguration = {\r\n    iceServers: [\r\n      {\r\n        urls: [\r\n          'stun:stun1.l.google.com:19302',\r\n          'stun:stun2.l.google.com:19302',\r\n        ],\r\n      },\r\n    ],\r\n    iceCandidatePoolSize: 10,\r\n  };\r\n\r\n  connection: RTCPeerConnection;\r\n\r\n  constructor(private signalingService: SignalingService) {}\r\n\r\n  private async _initConnection(remoteVideo: ElementRef): Promise<void> {\r\n    this.connection = new RTCPeerConnection(this.configuration);\r\n\r\n    await this._getStreams(remoteVideo);\r\n\r\n    this._registerConnectionListeners();\r\n  }\r\n\r\n  public async makeCall(remoteVideo: ElementRef): Promise<void> {\r\n    await this._initConnection(remoteVideo);\r\n\r\n    const offer = await this.connection.createOffer();\r\n\r\n    await this.connection.setLocalDescription(offer);\r\n\r\n    this.signalingService.sendMessage({ type: 'offer', offer });\r\n  }\r\n\r\n  public async handleOffer(\r\n    offer: RTCSessionDescription,\r\n    remoteVideo: ElementRef\r\n  ): Promise<void> {\r\n    await this._initConnection(remoteVideo);\r\n\r\n    await this.connection.setRemoteDescription(\r\n      new RTCSessionDescription(offer)\r\n    );\r\n\r\n    const answer = await this.connection.createAnswer();\r\n\r\n    await this.connection.setLocalDescription(answer);\r\n\r\n    this.signalingService.sendMessage({ type: 'answer', answer });\r\n  }\r\n\r\n  public async handleAnswer(answer: RTCSessionDescription): Promise<void> {\r\n    await this.connection.setRemoteDescription(\r\n      new RTCSessionDescription(answer)\r\n    );\r\n  }\r\n\r\n  public async handleCandidate(candidate: RTCIceCandidate): Promise<void> {\r\n    if (candidate) {\r\n      await this.connection.addIceCandidate(new RTCIceCandidate(candidate));\r\n    }\r\n  }\r\n\r\n  private _registerConnectionListeners(): void {\r\n    // this.connection.onicegatheringstatechange = (ev: Event) => {\r\n    //   console.log(\r\n    //     `ICE gathering state changed: ${this.connection.iceGatheringState}`\r\n    //   );\r\n    // };\r\n\r\n    // this.connection.onconnectionstatechange = () => {\r\n    //   console.log(\r\n    //     `Connection state change: ${this.connection.connectionState}`\r\n    //   );\r\n    // };\r\n\r\n    // this.connection.onsignalingstatechange = () => {\r\n    //   console.log(`Signaling state change: ${this.connection.signalingState}`);\r\n    // };\r\n\r\n    // this.connection.oniceconnectionstatechange = () => {\r\n    //   console.log(\r\n    //     `ICE connection state change: ${this.connection.iceConnectionState}`\r\n    //   );\r\n    // };\r\n    this.connection.onicecandidate = (event) => {\r\n      if (event.candidate) {\r\n        const payload = {\r\n          type: 'candidate',\r\n          candidate: event.candidate.toJSON(),\r\n        };\r\n        this.signalingService.sendMessage(payload);\r\n      }\r\n    };\r\n  }\r\n\r\n  private async _getStreams(remoteVideo: ElementRef): Promise<void> {\r\n    const stream = await navigator.mediaDevices.getUserMedia({\r\n      video: true,\r\n      audio: true,\r\n    });\r\n    stream.getTracks().forEach((track) => {\r\n      this.connection.addTrack(track, stream);\r\n    });\r\n\r\n    const remoteStream = new MediaStream();\r\n    remoteVideo.nativeElement.srcObject = remoteStream;\r\n    this.connection.ontrack = (event) => {\r\n      event.streams[0].getTracks().forEach((track) => {\r\n        remoteStream.addTrack(track);\r\n      });\r\n    };\r\n  }\r\n}\r\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.error(err));\r\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}